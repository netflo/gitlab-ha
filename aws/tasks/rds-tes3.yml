---
 - name: RDS | Create RDS Security Group
   local_action:
     module: ec2_group
     name: "{{ item.sg_name }}"
     description: "{{ item.sg_description }}"
     region: "{{ vpc_region }}" # Change the AWS region here
     vpc_id: "{{ vpc.vpc_id }}" # vpc is the resgister name, you can also set it manually
     state: present
     rules: "{{ item.sg_rules }}"
   with_items: "{{ rds_security_groups }}"
   register: rds_sg
   
  - debug: var=web_sg.results[0].group_id

 - name: RDS | Create RDS Subnet Group
   local_action:
     module: rds_subnet_group
     region: "{{ vpc_region }}"
     state: present
     name: "default-{{ vpc.vpc_id }}"
     description: "{{ rds_sg_description }}"
     subnets:
       - "{{ public_subnet_1 }}"
       - "{{ public_subnet_2 }}"
       - "{{ private_subnet }}"

 - name: RDS | Provisioning RDS Instance
   local_action:
     module: rds
     command: create
     region: "{{ vpc_region }}"
     multi_zone: "{{ multi_zone_option }}"
     subnet: "default-{{ vpc.vpc_id }}"
     vpc_security_groups: "{{ web-sg.results[0].group_id }}"
     instance_name: "{{ rds_instance_name }}"
     db_engine: "{{ rds_db_engine }}"
     size: "{{ rds_db_size }}"
     db_name: "{{ rds_db_name }}"
     instance_type: "{{ rds_instance_type }}"
     username: "{{ rds_db_username }}"
     password: "{{ rds_db_password }}"
     backup_retention: "{{ backup_retention_period }}"
     wait: yes
     wait_timeout: 600
     tags:
       Environment: "{{ ENV }}"
       Application: "{{ application }}"
   register: rds

 - name: RDS | Write the RDS facts/values to the file rds_info.yml inside the project directory
   shell: |
     echo "db_hostname: {{ rds.instance.endpoint }}" > rds_info.yml
     echo "db_name: {{ rds_db_name }}" >> rds_info.yml
     echo "db_username: {{ rds_db_username }}" >> rds_info.yml
     echo "db_password: {{ rds_db_password }}" >> rds_info.yml
