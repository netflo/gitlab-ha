---
- name: Ensure Gluster brick and mount directories exist.
  file:
    path: "{{ item }}"
    state: directory
    owner: ubuntu
    group: ubuntu
    mode: 0775
  with_items:
    - "{{ gluster_brick_dir }}"
    - "{{ gluster_mount_dir }}"

# Gluster volume configuration.
- name: Check if Gluster volumes already exist.
  shell: "sudo gluster volume info"
  changed_when: false
  register: gluster_volume_info

- name: Connect to Gluster peers.
  shell: "gluster peer probe {{ item }}"
  register: gluster_peer_probe
  changed_when: "'already in peer list' not in gluster_peer_probe.stdout"
  failed_when: false
  with_items:
    - "{{ groups.webserver[1] }}"
    - "{{ groups.webserver[0] }}"
  when: "'Volume Name: gluster' not in gluster_volume_info.stdout"

- name: Create Gluster volume .
  shell: "gluster volume create {{ gluster_brick_name }} {{ gluster_brick_config }}"
  register: gluster_volume_create
  changed_when: "'successful' in gluster_volume_create.stdout"
  when: "inventory_hostname == groups.webserver[2] and 'Volume Name: gluster' not in gluster_volume_info.stdout"

- name: Ensure Gluster volume is started.
  shell: "gluster volume start {{ gluster_brick_name }}"
  register: gluster_volume_start
  changed_when: "'successful' in gluster_volume_start.stdout"
  when: "inventory_hostname == groups.webserver[2] and 'Volume Name: gluster' not in gluster_volume_info.stdout"

- debug: var=inventory_hostname

- debug: var=groups.webserver[0]

# Mount configuration.
- name: Ensure the Gluster volume is mounted.
  mount:
    name: "{{ gluster_mount_dir }}"
    src: "{{ groups.webserver[0] }}:/{{ gluster_brick_name }}"
    fstype: glusterfs
    opts: "defaults,_netdev"
    state: mounted

